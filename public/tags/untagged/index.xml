<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>untagged on Tokamako</title>
    <link>https://huanglei.rocks/tags/untagged/</link>
    <description>Recent content in untagged on Tokamako</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Sat, 12 Mar 2022 17:42:25 +0800</lastBuildDate><atom:link href="https://huanglei.rocks/tags/untagged/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Notes on Influxdb Storage</title>
      <link>https://huanglei.rocks/posts/notes-on-influxdb-storage/</link>
      <pubDate>Sat, 12 Mar 2022 17:42:25 +0800</pubDate>
      
      <guid>https://huanglei.rocks/posts/notes-on-influxdb-storage/</guid>
      <description>InfluxDB 的存储引擎经过多次修改，本文描述的系统结构基于 InfluxDB 截止 2022-02-24 的 adf29dfedfc785620db0e104652544ce9f67cb6e 版本。当前版本已经支持 TSI 索引结构。
  InfluxDB 的存储系统   InfluxDB 的存储层有三个子系统：
 TSM：数据点的存储，可以高效地提供 SeriesKey 到时序数据值的插入和检索； TSI：时序数据的倒排索引，提供查询某个 measurement 下某个 tag 包含特定值的 SeriesID 的接口；  TSI 是 InfluxDB 查询引擎的核心，所谓的基数膨胀带来的问题也是出现在这一层。 为了降低 TSI 的内存占用，InfluxDB 引入了一个额外的 SeriesID。   Series 索引：提供根据 SeriesID 查找 SeriesKey 的接口等  SeriesFile.CreateSeriesListIfNotExists：创建 SeriesKey-&amp;gt;SeriesID 的映射 SeriesFile.SeriesKey：根据 SeriesID 查找 SeriesKey    应该说 TSI 加上 SeriesIndex 才是 InfluxDB 完整的索引部分，但是这两者各自是一个类 LSMT 的数据结构，也有自己的 WAL、compaction/recover 策略等等，因此 InfluxDB 做了区分。</description>
    </item>
    
  </channel>
</rss>
