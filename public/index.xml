<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tokamako</title>
    <link>https://huanglei.rocks/</link>
    <description>Recent content on Tokamako</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Thu, 10 Feb 2022 22:34:39 +0800</lastBuildDate><atom:link href="https://huanglei.rocks/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LSM Tree 笔记</title>
      <link>https://huanglei.rocks/posts/note-on-lsmt/</link>
      <pubDate>Thu, 10 Feb 2022 22:34:39 +0800</pubDate>
      
      <guid>https://huanglei.rocks/posts/note-on-lsmt/</guid>
      <description>写入（Write path）   先从磁盘（HDD）写入的特性引入 append-only 的 WAL。
  对于 KV 结构，如果写入是 append only的，那么就需要合并，不然读取性能太差。
  单文件合并性能差，因此需要按阈值切分为多个小文件，通过归并排序的思路优化合并的效率。
  多路归并要求每个文件有序，为了保证每个文件有序，就需要，数据写入的时候，不直接把 operation 直接写入到磁盘，而是先在内存缓存一段时间，并且在内存排好序，然后再一次把整个文件 flush 到磁盘。
 内存有序的数据结构：跳表、红黑树、B+ 树 buffer 在内存的数据丢了怎么办？先写 redo log    有序数据结构  RocksDB 的数据结构比较：选择跳表的原因是跳表支持并发插入。
 LSMT 的数据分类
 内存数据：MemTable 磁盘数据：SSTable（Sorted Sequence Table） 日志：redo log  内存数据组织 内存的数据需要保证有序，同时支持高性能的插入和查找。
 ART：自适应基树（比如 Bitcask 采用）； SkipList：LevelDB、RocksDB 等。  SSTable 文件格式 按 Block 进行存储，可以参考 LevelDB 和 RocksDB 的 SST 文件的格式。</description>
    </item>
    
    <item>
      <title>使用 GitHub Issue 作为 Hugo 的评论系统</title>
      <link>https://huanglei.rocks/posts/hugo-comment-with-github-issues/</link>
      <pubDate>Thu, 10 Feb 2022 15:07:10 +0800</pubDate>
      
      <guid>https://huanglei.rocks/posts/hugo-comment-with-github-issues/</guid>
      <description>安装 Octomments 按照 Octomments 的介绍，将 Octomments 安装到您的 GitHub 账户，确保它拥有访问您的目标 repo 的 issue 的权限。
配置 GitHub issue 在配置文件中增加配置项：
 comment.owner：Issue repo 的拥有者 comment.repo：Issue repo 的名字  配置 Comment 组件 在您的博客站点根目录下的layouts/partials/comments.html 模板中增加：
{{ if .Params.issueNumber -}} &amp;lt;link href=&amp;#34;https://unpkg.com/octomments/build/ocs-ui.min.css&amp;#34; rel=&amp;#34;stylesheet&amp;#34;&amp;gt; &amp;lt;div id=&amp;#34;comments&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;script src=&amp;#34;https://unpkg.com/octomments/build/ocs.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script&amp;gt; Octomments({ github: { owner: &amp;#39;{{ $.Site.Params.comment.owner }}&amp;#39;, repo: &amp;#39;{{ $.Site.Params.comment.repo }}&amp;#39;, }, issueNumber: {{ .Params.issueNumber }}, renderer: [OctommentsRenderer, &amp;#39;#comments&amp;#39;] }).init(); &amp;lt;/script&amp;gt; {{ end }} 配置需要评论的文章 在文章的 metadata 章节加入创建的 issue 的 issue number，如本文的 metadata：</description>
    </item>
    
    <item>
      <title>Rust 对象安全详解</title>
      <link>https://huanglei.rocks/posts/object-safety/</link>
      <pubDate>Thu, 09 Dec 2021 21:57:33 +0800</pubDate>
      
      <guid>https://huanglei.rocks/posts/object-safety/</guid>
      <description>Rust 的 RFC 上只给出了 object-safety 的定义，但是没有解释为何在满足这些条件的时候 trait 是 object safe 的，以及为啥需要 object safety，这反而是初学者最为困惑的点。
为什么需要 object safety？ Rust 通过 trait object 提供了类型擦除、动态分派的能力，但是这个能力是有限制的，不是所有的 trait 都能自动生成实现。 Trait object 本质上是对某个 trait 的自动默认实现，包括一个数据区和一个方法表。Object-safety 就是为了保证 Rust 编译器能够为某个 trait 生成合法自动实现。
 Trait object 的内存布局    Where Self Meets Sized: Revisiting Object Safety
 首先是关于 trait 的 object safety，一个 trait 是对象安全的，当且仅当它满足以下所有条件：
 trait 的类型不能限定为 Self: Sized1️⃣； trait 中所定义的所有方法都是 object-safe 的2️⃣；  接下来是关于方法的 object safety：一个方法是对象安全的，当且仅当这个方法满足下面任意一个特性：
 方法 receiver 的类型限定是 Self: Sized3️⃣ ；或者 满足以下所有条件：  方法不能有泛型参数4️⃣；且 receiver 类型必须是 Self 或者可以解引用为 Self 的引用类型5️⃣ 。目前只包括self/ &amp;amp;self / &amp;amp;mut self/ self: Box&amp;lt;Self&amp;gt;。以后可能也会扩展到 Rc&amp;lt;Self&amp;gt;等等。 Self类型只能用作 receiver 6️⃣     1️⃣ 也就是说，如下的 trait 是不能用作 trait object 的。</description>
    </item>
    
    <item>
      <title>Paxos Made Simple 笔记 (WIP)</title>
      <link>https://huanglei.rocks/posts/notes-on-paxos-made-simple/</link>
      <pubDate>Mon, 14 Jun 2021 11:24:18 +0800</pubDate>
      
      <guid>https://huanglei.rocks/posts/notes-on-paxos-made-simple/</guid>
      <description>关于 P2c P2c 是 P2b 的充分不必要条件，why？
  P2b: If a proposal with value v is chosen, then every higher-numbered proposal issued by any proposer has value v. P2c: For any v and n, if a proposal with value v and number n is issued, then there is a set S consisting of a majority of acceptors such that either  (a) no acceptor in S has accepted any proposal numbered less than n, or (b) v is the value of the highest-numbered proposal among all proposals numbered less than n accepted by the acceptors in S.</description>
    </item>
    
    <item>
      <title>Add MathJax and Graphviz support for HUGO</title>
      <link>https://huanglei.rocks/posts/add-math-and-dot-for-hugo/</link>
      <pubDate>Sun, 12 Apr 2020 14:22:22 +0800</pubDate>
      
      <guid>https://huanglei.rocks/posts/add-math-and-dot-for-hugo/</guid>
      <description>Get into your theme folder
  Find some directory named layouts/posts/single.html
  Inside the {{ define main }} block, paste following snippets
  {{ if .Params.viz }} &amp;lt;script type=&amp;#34;text/javascript&amp;#34; src=&amp;#34;https://cdn.bootcss.com/viz.js/1.8.2/viz.js&amp;#34;&amp;gt; &amp;lt;/script&amp;gt; &amp;lt;script type=&amp;#34;text/javascript&amp;#34;&amp;gt; (function(){ var vizPrefix = &amp;#34;language-viz-&amp;#34;; Array.prototype.forEach.call(document.querySelectorAll(&amp;#34;[class^=&amp;#34; + vizPrefix + &amp;#34;]&amp;#34;), function(x){ var engine; x.getAttribute(&amp;#34;class&amp;#34;).split(&amp;#34; &amp;#34;).forEach(function(cls){ if (cls.startsWith(vizPrefix)) { engine = cls.substr(vizPrefix.length); } }); var image = new DOMParser().parseFromString(Viz(x.innerText, {format:&amp;#34;svg&amp;#34;, engine:engine}), &amp;#34;image/svg+xml&amp;#34;); x.parentNode.insertBefore(image.documentElement, x); x.</description>
    </item>
    
    <item>
      <title>About Me</title>
      <link>https://huanglei.rocks/about-me/</link>
      <pubDate>Sun, 12 Apr 2020 11:37:42 +0800</pubDate>
      
      <guid>https://huanglei.rocks/about-me/</guid>
      <description> River Drina, border between Bosnia-Herzegovina and Serbia
 Full-time coder, part-time photographer @HANGZHOU.
 PEK/PVG/SHA/SZX/HGH/NKG NRT SIN SGN CDG/ORY MAD/BCN SVO/LED KBP/ODS BEG REP  </description>
    </item>
    
    <item>
      <title>Graphviz and mathjax demo</title>
      <link>https://huanglei.rocks/posts/math-and-dot-demo/</link>
      <pubDate>Sat, 11 Apr 2020 23:26:41 +0800</pubDate>
      
      <guid>https://huanglei.rocks/posts/math-and-dot-demo/</guid>
      <description>digraph g{ rankdir=LR; node [shape=record,width=01,height=.1]; a[label=&amp;quot;&amp;lt;1&amp;gt;Hash Table|&amp;lt;2&amp;gt;Node|&amp;lt;3&amp;gt;Node|...|&amp;lt;4&amp;gt;TreeNode&amp;quot;]; { // graph[rankdir=LR] node1[label=&amp;quot;{&amp;lt;1&amp;gt;A1|&amp;lt;2&amp;gt;A2|...|An}&amp;quot;] node2[label=&amp;quot;{&amp;lt;1&amp;gt;B1|&amp;lt;2&amp;gt;B2|...|Bn}&amp;quot;] // node3[label=&amp;quot;{&amp;lt;1&amp;gt;C1|&amp;lt;2&amp;gt;C2}&amp;quot;] subgraph cluster_treenode{ penwidth=0; node[shape=circle]; root[label=&amp;quot;&amp;quot;, style=filled,fillcolor=black,width=.2]; n1[label=&amp;quot;&amp;quot;, style=filled,fillcolor=red,width=.2] n2[label=&amp;quot;&amp;quot;, style=filled,fillcolor=black,width=.2] n3[label=&amp;quot;&amp;quot;, style=filled,fillcolor=black,width=.2] n4[label=&amp;quot;&amp;quot;, style=filled,fillcolor=red,width=.2] n5[label=&amp;quot;&amp;quot;, style=filled,fillcolor=black,width=.2] n6[label=&amp;quot;&amp;quot;, style=filled,fillcolor=black,width=.2] root-&amp;gt;n1; n1-&amp;gt;n2; n1-&amp;gt;n3; root-&amp;gt;n4; n4-&amp;gt;n5; n4-&amp;gt;n6; } } a:2:e-&amp;gt;node1:1 [style=dashed]; a:3:e-&amp;gt;node2:1; a:4:e-&amp;gt;root; // node3:d-&amp;gt;node3:sa2; } $$f(a) = \frac{1}{2\pi i} \oint\frac{f(z)}{z-a}dz$$</description>
    </item>
    
    <item>
      <title>April 2020</title>
      <link>https://huanglei.rocks/gallery/2020/</link>
      <pubDate>Sat, 04 Apr 2020 12:00:00 +0800</pubDate>
      
      <guid>https://huanglei.rocks/gallery/2020/</guid>
      <description>Longjing Village, Hangzhou, 04/Apr/2020 Spring Afternoon, Hangzhou, 11/Apr/2020 Xixi National Wetland Park, Hangzhou, 11/Apr/2020 </description>
    </item>
    
    <item>
      <title>2019</title>
      <link>https://huanglei.rocks/gallery/2019/</link>
      <pubDate>Tue, 31 Dec 2019 23:59:59 +0800</pubDate>
      
      <guid>https://huanglei.rocks/gallery/2019/</guid>
      <description>Temple, Qiyun Moutain, Anhui Sunset, Shenzhen </description>
    </item>
    
  </channel>
</rss>
